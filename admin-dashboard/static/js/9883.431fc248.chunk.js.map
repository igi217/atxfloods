{"version":3,"file":"static/js/9883.431fc248.chunk.js","mappings":"8QAsFA,UAlFmB,WACf,MAA8BA,EAAAA,UAAe,GAA7C,eAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,EAAAA,SAAe,IAAvC,eAAOG,EAAP,KAAaC,EAAb,KAkBA,OAhBAJ,EAAAA,WAAgB,WACZ,IAAIK,EAAMC,EAAAA,EAAAA,SACV,uBAAC,2GACwBC,MAAMF,EAAK,CAC5BG,OAAQ,MACRC,QAAS,CACL,eAAiBC,EAAAA,EAAAA,QAJ5B,cACOC,EADP,gBAQoBA,EAASC,OAR7B,OAQOT,EARP,OAUGC,EAAQD,EAAKU,YAVhB,0CAAD,EAYH,GAAE,KAGC,iCACI,SAAC,KAAD,CAAOC,UAAU,OAAjB,UACI,SAAC,KAAD,WACI,gBAAKA,UAAU,MAAf,UACI,gBAAKA,UAAU,WAAf,UACI,eAAIA,UAAU,iBAAd,mCAKhB,SAAC,KAAD,UAEQX,EAAKY,KAAI,SAACC,GAAD,OAEL,SAAC,KAAD,CAAMC,GAAI,EAAV,UACI,SAAC,KAAD,WACI,UAAC,KAAD,CAAWH,UAAU,cAArB,WACI,UAAC,KAAD,CAAMI,GAAG,kBAAkBC,MAAO,CAACC,eAAgB,OAAQC,MAAM,SAAjE,WACI,gBAAKP,UAAU,YAAYQ,IAAKhB,EAAAA,EAAAA,KAAiB,WAAaU,EAAQO,OAAO,GAAGC,WAAYC,IAAKT,EAAQO,OAAO,GAAGC,cACnH,wCAAgBR,EAAQU,cACxB,uCAAeV,EAAQW,YACvB,2CAAmB,IAAIC,KAAKZ,EAAQa,YAAYC,wBAEpD,iBAAMC,QAAS,kBAAM7B,GAAYD,EAAlB,EAA4Ba,UAAU,sBAArD,UAA2E,cAAGA,UAAU,+BATlFE,EAAQgB,GAFrB,OAmBjB,UAAC,KAAD,CAAQ/B,QAASA,EAASgC,QAAS,kBAAM/B,GAAW,EAAjB,EAAnC,WACI,SAAC,KAAD,CAAc+B,QAAS,kBAAM/B,GAAW,EAAjB,KAEvB,SAAC,KAAD,WACI,UAAC,KAAD,CAAWgC,UAAQ,EAACC,YAAU,EAA9B,WACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAQrB,UAAU,gBAAgBQ,IAAI,mGAAmGG,IAAI,aAC7I,SAAC,KAAD,CAAkBX,UAAU,oBAA5B,UACI,oDAGR,UAAC,KAAD,YACI,SAAC,KAAD,CAAQA,UAAU,gBAAgBQ,IAAI,mGAAmGG,IAAI,aAC7I,SAAC,KAAD,CAAkBX,UAAU,oBAA5B,UACA,oDAGJ,UAAC,KAAD,YACI,SAAC,KAAD,CAAQA,UAAU,gBAAgBQ,IAAI,mGAAmGG,IAAI,aAC7I,SAAC,KAAD,CAAkBX,UAAU,oBAA5B,UACA,6DAS3B,C","sources":["components/CameraFeed.js"],"sourcesContent":["import React from \"react\";\r\nimport { CRow, CCol, CCard, CCardBody, CModal, CModalHeader, CModalBody, CCarousel, CCarouselItem, CImage, CCarouselCaption } from \"@coreui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Constants, { userToken } from \"src/Constants\";\r\nconst CameraFeed = () => {\r\n    const [visible, setVisible] = React.useState(false);\r\n    const [data, setData] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        let url = Constants.cameras;\r\n        (async () => {\r\n            let response = await fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': userToken(),\r\n\r\n                }\r\n            })\r\n            let data = await response.json();\r\n            // console.log(data);\r\n            setData(data.attributes);\r\n        })()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <CCard className=\"my-2\">\r\n                <CCardBody>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <h5 className=\"text-uppercase\">Camera Feeds</h5>\r\n                        </div>\r\n                    </div>\r\n                </CCardBody>\r\n            </CCard>\r\n            <CRow>\r\n                {\r\n                    data.map((cameras) => (\r\n\r\n                        <CCol xs={6} key={cameras.id}>\r\n                            <CCard>\r\n                                <CCardBody className=\"camera-feed\">\r\n                                    <Link to=\"/camera-details\" style={{textDecoration: 'none', color:'black'}}>\r\n                                        <img className=\"img-fluid\" src={Constants.base + \"uploads/\" + cameras.images[0].image_name} alt={cameras.images[0].image_name} />\r\n                                        <h5>Camera Id: {cameras.unique_id}</h5>\r\n                                        <h5>Location: {cameras.address}</h5>\r\n                                        <h6>Last Updated: {new Date(cameras.updated_at).toLocaleString()}</h6>\r\n                                    </Link>\r\n                                    <span onClick={() => setVisible(!visible)} className=\"mouse link-dark m-2\"><i className=\"far fa-search-plus\"></i></span>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        </CCol>\r\n                    ))\r\n                }\r\n            </CRow>\r\n\r\n            <CModal visible={visible} onClose={() => setVisible(false)}>\r\n                <CModalHeader onClose={() => setVisible(false)}>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CCarousel controls indicators>\r\n                        <CCarouselItem>\r\n                            <CImage className=\"d-block w-100\" src=\"https://photos-legacy.beholderhq.com/v3/photos/9803b71e-e740-4c1f-a01d-54b48fad8768-original.jpg\" alt=\"slide 1\" />\r\n                            <CCarouselCaption className=\"d-none d-md-block\">\r\n                                <p>Camera: 0123456789</p>\r\n                            </CCarouselCaption>\r\n                        </CCarouselItem>\r\n                        <CCarouselItem>\r\n                            <CImage className=\"d-block w-100\" src=\"https://photos-legacy.beholderhq.com/v3/photos/9803b71e-e740-4c1f-a01d-54b48fad8768-original.jpg\" alt=\"slide 2\" />\r\n                            <CCarouselCaption className=\"d-none d-md-block\">\r\n                            <p>Camera: 0123456789</p>\r\n                            </CCarouselCaption>\r\n                        </CCarouselItem>\r\n                        <CCarouselItem>\r\n                            <CImage className=\"d-block w-100\" src=\"https://photos-legacy.beholderhq.com/v3/photos/9803b71e-e740-4c1f-a01d-54b48fad8768-original.jpg\" alt=\"slide 3\" />\r\n                            <CCarouselCaption className=\"d-none d-md-block\">\r\n                            <p>Camera: 0123456789</p>\r\n                            </CCarouselCaption>\r\n                        </CCarouselItem>\r\n                    </CCarousel>\r\n                </CModalBody>\r\n            </CModal>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default CameraFeed;"],"names":["React","visible","setVisible","data","setData","url","Constants","fetch","method","headers","userToken","response","json","attributes","className","map","cameras","xs","to","style","textDecoration","color","src","images","image_name","alt","unique_id","address","Date","updated_at","toLocaleString","onClick","id","onClose","controls","indicators"],"sourceRoot":""}