{"version":3,"file":"static/js/485.a557db54.chunk.js","mappings":"kMAaA,IAZqB,SAACA,GAClB,OACI,gCAEKA,EAAMC,QAAU,cAAGC,UAAU,yCAAyCC,QAASH,EAAMC,SAAe,IAErG,cAAGC,UAAU,wCAAwCC,QAASH,EAAMI,YACpE,cAAGF,UAAU,sDAAsDC,QAASH,EAAMK,WAG7F,C,8QCyMD,EA3MsB,WAElB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,EAAwBC,EAAAA,SAAe,IAAvC,eAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCF,EAAAA,SAAe,CAC/CG,SAAU,GACVC,YAAa,IAFjB,eAAOC,EAAP,KAAmBC,EAAnB,KAIA,EAA4BN,EAAAA,SAAe,CACvCO,OAAS,GACTC,OAAS,KAFb,eAAOC,EAAP,KAAeC,EAAf,KAIA,EAAwBV,EAAAA,UAAe,GAAvC,eAAOW,EAAP,KAAaC,EAAb,KACA,EAA0BZ,EAAAA,SAAe,GAAzC,eAAOa,EAAP,KAAcC,EAAd,KAIMC,EAAU,CACZ,CACIC,KAAM,KACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIC,EAAR,EACbC,UAAU,GAEd,CACIJ,KAAM,OACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIF,IAAR,EACbI,UAAU,GAEd,CACIJ,KAAM,eACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIG,YAAR,EACbD,UAAU,GAEd,CACIJ,KAAM,UACNC,SAAU,SAAAC,GAAG,OAAIA,EAAII,OAAR,EACbF,UAAU,GAEd,CACIJ,KAAM,SACNC,SAAU,SAAAC,GAAG,OAAI,iBAAMxB,UAAS,iBAAYwB,EAAIV,QAA/B,SAA0CU,EAAIV,QAAlD,EACbY,UAAU,GAEd,CACIJ,KAAM,gBACNC,SAAU,SAAAC,GAAG,OAAI,IAAIK,KAAKL,EAAIM,YAAYC,gBAA7B,EACbL,UAAU,GAEd,CACIJ,KAAM,SACNC,SAAU,SAACC,GAAD,OAAS,SAACQ,EAAA,EAAD,CAAcjC,OAAQ,kBAAMkC,EAAWT,EAAjB,EAAuBrB,OAAQ,kBAAM+B,EAAWV,EAAjB,EAAuBtB,SAAU,kBAAMiC,EAAaX,EAAIC,GAAvB,GAA/F,EACVC,UAAU,IAIZO,EAAa,SAACT,GAChBY,QAAQC,IAAIb,GACZpB,EAAS,kBAAmB,CAAEkC,MAAOd,GACxC,EAEKU,EAAa,SAACV,GAEhBpB,EAAS,kBAAmB,CAAEkC,MAAOd,GACxC,EAEKW,EAAY,yCAAG,WAAOV,GAAP,qFACbc,EAAMC,EAAAA,EAAAA,eAA2Bf,EADpB,SAEIgB,MAAMF,EAAK,CAC5BG,OAAQ,MACRC,QAAS,CACL,eAAiBC,EAAAA,EAAAA,QALR,cAEbC,EAFa,gBASAA,EAASC,OATT,OAUG,MAVH,OAURhC,SACLI,GAASD,GACT8B,EAAAA,GAAAA,QAAc,iCAZD,2CAAH,sDAuBZC,EAAa,yCAAG,8GACdC,EAAOC,SAASC,cAAc,gBAC9BZ,EAAMC,EAAAA,EAAAA,gBAFQ,SAGGC,MAAMF,EAAK,CAC5BG,OAAQ,OACRC,QAAS,CACL,eAAiBC,EAAAA,EAAAA,MAGrBQ,KAAK,IAAIC,SAASJ,KATJ,cAGdJ,EAHc,gBAWDA,EAASC,OAXR,OAWdvC,EAXc,SAagBA,EAAKA,KAAlC+C,EAba,EAabA,OAAQC,EAbK,EAaLA,QAASC,EAbJ,EAaIA,SACtBF,EAAOG,SAAQ,SAAAC,GACXX,EAAAA,GAAAA,MAAYW,EACf,IAEDF,EAASC,SAAQ,SAAAE,GACbZ,EAAAA,GAAAA,QAAcY,EACjB,IAEEJ,GACCR,EAAAA,GAAAA,QAAcQ,EAAS,0BAvBT,4CAAH,qDAgDnB,OAtBAjD,EAAAA,WAAgB,WACZ,IAAIiC,EAAMC,EAAAA,EAAAA,WAGV,uBAAC,2GACwBC,MAAMF,EAAG,oBAAgB5B,EAAWF,SAA3B,wBAAmDE,EAAWD,YAA9D,mBAAoFK,EAAOF,OAA3F,mBAA4GE,EAAOD,QAAU,CACvJ4B,OAAQ,MACRC,QAAS,CACL,eAAiBC,EAAAA,EAAAA,QAJ5B,cACOC,EADP,gBAQoBA,EAASC,OAR7B,OAQOvC,EARP,OAUGC,EAAQD,EAAKA,MACba,EAASb,EAAKY,OAXjB,0CAAD,EAeH,GAAE,CAACR,EAAYM,EAAMF,KAIlB,iCACI,SAAC,KAAD,CACI6C,SAAS,YACTC,MAAM,UACNC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,KAChB,SAAC,KAAD,CAAOrE,UAAU,OAAjB,UACI,UAAC,KAAD,YACI,iBAAKA,UAAU,MAAf,WACI,gBAAKA,UAAU,WAAf,UACI,eAAIA,UAAU,0BAAd,8BAEJ,gBAAKA,UAAU,WAAf,UACI,iBAAKA,UAAU,kDAAf,WACA,kBAAOsE,QAAQ,OAAOC,KAAK,SAASC,MAAM,UAAUxE,UAAU,sBAA9D,qBACA,SAAC,KAAD,CAAMyE,GAAG,iBAAiBzE,UAAU,qCAApC,0BAIR,cAAGA,UAAU,aAAa0E,SAAS,gBAAgBC,KAAMC,EAAzD,2CAGR,SAAC,KAAD,CAAO5E,UAAU,OAAjB,UACI,SAAC,KAAD,WACI,iBAAKA,UAAU,MAAf,WACI,gBAAKA,UAAU,QAAf,UACI,SAAC,KAAD,CAAYuE,KAAK,OAAOM,YAAY,WAAW7E,UAAU,mBAE7D,gBAAKA,UAAU,QAAf,UACI,UAAC,KAAD,CAAaA,UAAU,gBAAvB,WACI,mBAAQ8E,QAAQ,EAAMC,MAAM,GAA5B,qBACA,mBAAQA,MAAM,IAAd,qBACA,mBAAQA,MAAM,IAAd,mBACA,mBAAQA,MAAM,IAAd,2BAGR,gBAAK/E,UAAU,QAAf,UACI,SAAC,KAAD,CAASuE,KAAK,SAASvE,UAAU,kBAAkBwE,MAAM,UAAUvE,QAnGtE,WACjB,IAAIY,EAASqC,SAASC,cAAc,gBAAgB4B,MAChDjE,EAASoC,SAASC,cAAc,kBAAkB4B,MACtD/D,EAAU,CAACH,OAAAA,EAAQC,OAAAA,GAEtB,EA8FuB,8BAMhB,SAAC,KAAD,CACIO,QAASA,EACTd,KAAMA,EACNI,YAAU,EACVqE,qBAhLS,WAEpB,EA+KWC,kBAAgB,EAChBC,oBAAqB/D,EACrBgE,oBAAqB,SAAC1E,GAAD,OAAcG,GAAc,kBAAKD,GAAN,IAAkBF,SAAAA,IAA7C,EACrB2E,aAAc,SAAC1E,EAAaD,GAAd,OAA2BG,GAAc,kBAAKD,GAAN,IAAkBD,YAAAA,IAA1D,KAElB,iBAAM2E,QAAQ,sBAAsBrF,UAAU,qBAA9C,UACI,kBAAOuE,KAAK,OAAOjD,KAAK,OAAOG,GAAG,OAAO6D,OAAO,QAAQC,SAAUvC,QAIjF,C","sources":["components/ActionButton.js","components/CrossingTable.js"],"sourcesContent":["import React, { Component }  from 'react';\r\nconst ActionButton = (props) => {\r\n    return(\r\n        <>\r\n        {\r\n            (props.onView) ? <i className=\"fa-solid fa-eye pointer me-2 text-info\" onClick={props.onView}></i> : ''\r\n        }\r\n            <i className=\"fa-solid fa-trash pointer text-danger\" onClick={props.onDelete}></i>\r\n            <i className=\"fa-solid fa-pen-to-square pointer ms-2 text-warning\" onClick={props.onEdit}></i>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActionButton;","import React from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Constants, { userToken } from \"src/Constants\";\r\nimport ActionButton from \"./ActionButton\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { CCard, CCardBody, CFormInput, CFormSelect, CButton } from \"@coreui/react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport template from '../assets/template.xlsx';\r\n\r\nconst CrossingTable = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const [data, setData] = React.useState([]);\r\n    const [pagination, setPagination] = React.useState({\r\n        per_page: 10,\r\n        page_number: 1\r\n    })\r\n    const [filter, setFilter] = React.useState({\r\n        search : '',\r\n        status : ''\r\n    })\r\n    const [load, setLoad] = React.useState(true)\r\n    const [total, setTotal] = React.useState(0);\r\n    const handleChange = () => {\r\n\r\n    }\r\n    const columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: row => row.id,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Name',\r\n            selector: row => row.name,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Jurisdiction',\r\n            selector: row => row.jurisdiction,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Address',\r\n            selector: row => row.address,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Status',\r\n            selector: row => <span className={`status-${row.status}`}>{row.status}</span>,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Last Modified',\r\n            selector: row => new Date(row.updated_at).toLocaleString(),\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Action',\r\n            selector: (row) => <ActionButton onView={() => handleView(row)} onEdit={() => handleEdit(row)} onDelete={() => handleDelete(row.id)} />,\r\n            sortable: true\r\n        }\r\n    ];\r\n\r\n    const handleView = (row) => {\r\n        console.log(row);\r\n        navigate('/crossings/view', { state: row });\r\n    }\r\n\r\n    const handleEdit = (row) => {\r\n        // console.log(row);\r\n        navigate('/crossings/edit', { state: row });\r\n    }\r\n\r\n    const handleDelete = async (id) => {\r\n        let url = Constants.deleteCrossing + id;\r\n        let response = await fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': userToken(),\r\n\r\n            }\r\n        })\r\n        let json = await response.json();\r\n        if (json.status === 200) {\r\n            setLoad(!load);\r\n            toast.success(\"Record deleted successfully!\");\r\n        }\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        let search = document.querySelector('.search-text').value;\r\n        let status = document.querySelector('.search-status').value;\r\n        setFilter({search, status})\r\n\r\n    }\r\n\r\n    const handleUploads = async () => {\r\n        let form = document.querySelector('.import-form');\r\n        let url = Constants.crossingsImport;\r\n        let response = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': userToken(),\r\n\r\n            },\r\n            body:new FormData(form)\r\n        })\r\n        let data = await response.json();\r\n        // console.log(data);\r\n        let {errors, success, warnings} = data.data;\r\n        errors.forEach(err => {\r\n            toast.error(err);\r\n        })\r\n\r\n        warnings.forEach(wrr => {\r\n            toast.warning(wrr);\r\n        })\r\n\r\n        if(success){\r\n            toast.success(success+ \" Imported Seccessfully\");\r\n        }\r\n    }\r\n    React.useEffect(() => {\r\n        let url = Constants.crossings;\r\n\r\n\r\n        (async () => {\r\n            let response = await fetch(url + `?per_page=${pagination.per_page}&page_number=${pagination.page_number}&search=${filter.search}&status=${filter.status}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': userToken(),\r\n\r\n                }\r\n            })\r\n            let data = await response.json();\r\n            // console.log(data);\r\n            setData(data.data);\r\n            setTotal(data.total);\r\n\r\n\r\n        })()\r\n    }, [pagination, load, filter])\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                theme=\"colored\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover />\r\n            <CCard className=\"my-2\">\r\n                <CCardBody>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <h5 className=\"d-inline text-uppercase\">All Crossings</h5>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"float-end d-inline-flex justify-content-between\">\r\n                            <label htmlFor=\"file\" type=\"submit\" color=\"primary\" className=\"btn btn-primary m-2\">Import</label>\r\n                            <Link to=\"/crossings/add\" className=\"btn text-uppercase btn-primary m-2\">Add</Link>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <a className=\"text-reset\" download=\"template.xlsx\" href={template}>Download Excel Template</a>\r\n                </CCardBody>\r\n            </CCard>\r\n            <CCard className=\"my-2\">\r\n                <CCardBody>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-5\">\r\n                            <CFormInput type=\"text\" placeholder=\"Search..\" className=\"search-text\"/>\r\n                        </div>\r\n                        <div className=\"col-5\">\r\n                            <CFormSelect className=\"search-status\">\r\n                                <option hidden={true} value=\"\">Select</option>\r\n                                <option value=\"0\">Closed</option>\r\n                                <option value=\"1\">Open</option>\r\n                                <option value=\"2\">Caution</option>\r\n                            </CFormSelect>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <CButton type=\"button\" className=\"float-end w-100\" color=\"primary\" onClick={handleSearch}>Search</CButton>\r\n                        </div>\r\n                    </div>\r\n                </CCardBody>\r\n\r\n            </CCard>\r\n            <DataTable\r\n                columns={columns}\r\n                data={data}\r\n                pagination\r\n                onSelectedRowsChange={handleChange}\r\n                paginationServer\r\n                paginationTotalRows={total}\r\n                onChangeRowsPerPage={(per_page) => setPagination({ ...pagination, per_page })}\r\n                onChangePage={(page_number, per_page) => setPagination({ ...pagination, page_number })}\r\n            />\r\n            <form encType=\"multipart/from-data\" className=\"d-none import-form\">\r\n                <input type=\"file\" name=\"file\" id=\"file\" accept=\".xlsx\" onChange={handleUploads}/>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CrossingTable;"],"names":["props","onView","className","onClick","onDelete","onEdit","navigate","useNavigate","React","data","setData","per_page","page_number","pagination","setPagination","search","status","filter","setFilter","load","setLoad","total","setTotal","columns","name","selector","row","id","sortable","jurisdiction","address","Date","updated_at","toLocaleString","ActionButton","handleView","handleEdit","handleDelete","console","log","state","url","Constants","fetch","method","headers","userToken","response","json","toast","handleUploads","form","document","querySelector","body","FormData","errors","success","warnings","forEach","err","wrr","position","theme","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","htmlFor","type","color","to","download","href","template","placeholder","hidden","value","onSelectedRowsChange","paginationServer","paginationTotalRows","onChangeRowsPerPage","onChangePage","encType","accept","onChange"],"sourceRoot":""}