{"version":3,"file":"static/js/9883.4f417bf7.chunk.js","mappings":"8QAoFA,UAhFmB,WACf,MAAwBA,EAAAA,SAAe,IAAvC,eAAOC,EAAP,KAAaC,EAAb,KAkBA,OAhBAF,EAAAA,WAAgB,WACZ,IAAIG,EAAMC,EAAAA,EAAAA,SACV,uBAAC,2GACwBC,MAAMF,EAAK,CAC5BG,OAAQ,MACRC,QAAS,CACL,eAAiBC,EAAAA,EAAAA,QAJ5B,cACOC,EADP,gBAQoBA,EAASC,OAR7B,OAQOT,EARP,OAUGC,EAAQD,EAAKU,YAVhB,0CAAD,EAYH,GAAE,KAGC,iCACI,SAAC,KAAD,CAAOC,UAAU,OAAjB,UACI,SAAC,KAAD,WACI,gBAAKA,UAAU,MAAf,UACI,gBAAKA,UAAU,WAAf,UACI,eAAIA,UAAU,iBAAd,mCAKhB,SAAC,KAAD,UAEQX,EAAKY,KAAI,SAACC,GAAD,aAEL,SAAC,KAAD,CAAMC,GAAI,EAAV,UACI,SAAC,KAAD,WACI,UAAC,KAAD,CAAWH,UAAU,cAArB,WAEgB,OAAPE,QAAO,IAAPA,GAAA,UAAAA,EAASE,cAAT,eAAiBC,QAAS,GAEvB,SAAC,KAAD,CAAWC,UAAQ,EAAnB,SAEKJ,EAAQE,OAAOH,KAAI,SAACM,EAAOC,GAExB,OAEI,UAAC,KAAD,YACI,SAAC,KAAD,CAAMC,GAAE,0BAAqBP,EAAQQ,IAAMC,MAAO,CAAEC,eAAgB,OAAQC,MAAO,SAAnF,UACI,gBAAKb,UAAU,oBAAoBc,IAAKtB,EAAAA,EAAAA,KAAiB,WAAae,EAAMQ,WAAYC,IAAKT,EAAMQ,gBAEvG,SAAC,KAAD,CAAkBf,UAAU,oBAA5B,UACI,eAAGA,UAAU,eAAb,wBAAwC,IAAIiB,KAAKV,EAAMW,YAAYC,wBALvDX,EAW3B,OAKH,+CAEV,UAAC,KAAD,CAAMC,GAAE,0BAAqBP,EAAQQ,IAAMC,MAAO,CAAEC,eAAgB,OAAQC,MAAO,SAAnF,WAEI,wCAAgBX,EAAQkB,cACxB,uCAAelB,EAAQmB,YACvB,2CAAmB,IAAIJ,KAAKf,EAAQoB,YAAYH,6BAlC9CjB,EAAQQ,GAFrB,QA+C5B,C","sources":["components/CameraFeed.js"],"sourcesContent":["import React from \"react\";\r\nimport { CRow, CCol, CCard, CCardBody, CCarousel, CCarouselItem, CCarouselCaption } from \"@coreui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Constants, { userToken } from \"src/Constants\";\r\nconst CameraFeed = () => {\r\n    const [data, setData] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        let url = Constants.cameras;\r\n        (async () => {\r\n            let response = await fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': userToken(),\r\n\r\n                }\r\n            })\r\n            let data = await response.json();\r\n            // console.log(data);\r\n            setData(data.attributes);\r\n        })()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <CCard className=\"my-2\">\r\n                <CCardBody>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <h5 className=\"text-uppercase\">Camera Feeds</h5>\r\n                        </div>\r\n                    </div>\r\n                </CCardBody>\r\n            </CCard>\r\n            <CRow>\r\n                {\r\n                    data.map((cameras) => (\r\n\r\n                        <CCol xs={6} key={cameras.id}>\r\n                            <CCard>\r\n                                <CCardBody className=\"camera-feed\">\r\n                                    {\r\n                                        (cameras?.images?.length > 0) ?\r\n\r\n                                            <CCarousel controls>\r\n\r\n                                                {cameras.images.map((image, index) => {\r\n\r\n                                                    return (\r\n\r\n                                                        <CCarouselItem key={index}>\r\n                                                            <Link to={`/camera-details/${cameras.id}`} style={{ textDecoration: 'none', color: 'black' }}>\r\n                                                                <img className=\"img-fluid d-block\" src={Constants.base + \"uploads/\" + image.image_name} alt={image.image_name} />\r\n                                                            </Link>\r\n                                                            <CCarouselCaption className=\"d-none d-md-block\">\r\n                                                                <p className=\"fw-bold fs-5\">Captured : {new Date(image.created_at).toLocaleString()}</p>\r\n                                                            </CCarouselCaption>\r\n                                                        </CCarouselItem>\r\n\r\n                                                    )\r\n\r\n                                                })}\r\n\r\n                                            </CCarousel>\r\n\r\n\r\n                                            : <p>No Image Available</p>\r\n                                    }\r\n                                    <Link to={`/camera-details/${cameras.id}`} style={{ textDecoration: 'none', color: 'black' }}>\r\n\r\n                                        <h5>Camera Id: {cameras.unique_id}</h5>\r\n                                        <h5>Location: {cameras.address}</h5>\r\n                                        <h6>Last Updated: {new Date(cameras.updated_at).toLocaleString()}</h6>\r\n                                    </Link>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        </CCol>\r\n                    ))\r\n                }\r\n            </CRow>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default CameraFeed;"],"names":["React","data","setData","url","Constants","fetch","method","headers","userToken","response","json","attributes","className","map","cameras","xs","images","length","controls","image","index","to","id","style","textDecoration","color","src","image_name","alt","Date","created_at","toLocaleString","unique_id","address","updated_at"],"sourceRoot":""}