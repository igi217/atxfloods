{"version":3,"file":"static/js/866.d240e579.chunk.js","mappings":"sMAmDA,UA/CqB,WACnB,IAQA,EAAkCA,EAAAA,SAAe,IAAjD,eAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,EAAAA,SAAe,MAAnD,eAAOG,EAAP,KAAmBC,EAAnB,KAwBA,OAtBAJ,EAAAA,WAAgB,WACd,IAAIK,EAAMC,EAAAA,EAAAA,WAEV,uBAAC,6GACsBC,MAAMF,GAD5B,cACKG,EADL,gBAEkBA,EAASC,OAF3B,OAEKC,EAFL,OAGCC,QAAQC,IAAIF,GACRG,EAAMC,EAAAA,IAAM,OAAOC,QAAQ,CAAC,WAAY,UAAW,GACvDL,EAAKM,WAAWC,SAAQ,SAACC,EAAUC,GAnB1B,IAACC,EAoBRN,EAAAA,OAAS,CAACI,EAASG,IAAKH,EAASI,KAAM,CACrCC,MArBMH,EAqBKF,EAASM,OApBnBV,EAAAA,KAAO,CACZW,QAAQ,eAAD,OAAiBL,EAAjB,QACPM,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,EAAG,QAmBXC,GAAG,SAAS,kBAAMxB,EAAce,EAApB,IACZU,MAAMhB,EACV,IACDC,EAAAA,UAAY,iDAAkD,CAAC,GAAGe,MAChEhB,GAGFX,EAAaQ,GAhBd,2CAAD,EAkBD,GAAE,KAED,iCACE,gBAAKoB,GAAG,SACR,SAAC,IAAD,CACApB,KAAMT,EACN6B,GAAI3B,EACJ4B,MAAO3B,EACP4B,QAAQ,EACRC,QAAQ,yBAGb,C","sources":["components/CrossingsMap.js"],"sourcesContent":["import * as L from \"leaflet\";\r\nimport React from \"react\";\r\nimport Constants from \"../Constants\";\r\nimport DetailCard from \"./DetailCard\";\r\nconst CrossingsMap = () => {\r\n  const Icon = (state) => {\r\n    return L.icon({\r\n      iconUrl: `/static/svg/${state}.png`,\r\n      iconSize: [20, 20],\r\n      iconAnchor: [0, 0],\r\n    });\r\n  };\r\n\r\n  const [crossings, setcrossings] = React.useState([]);\r\n  const [selectedId, setSelectedId] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    let url = Constants.crossings;\r\n\r\n    (async () => {\r\n      let response = await fetch(url);\r\n      let data = await response.json();\r\n      console.log(data);\r\n      let map = L.map(\"map\").setView([30.266666, -97.73333], 9);\r\n      data.attributes.forEach((location, index) => {\r\n        L.marker([location.lat, location.lon], {\r\n          icon: Icon(location.status),\r\n        })\r\n          .on(\"click\", () => setSelectedId(index))\r\n          .addTo(map);\r\n      });\r\n      L.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {}).addTo(\r\n        map\r\n      );\r\n\r\n      setcrossings(data);\r\n    })();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div id=\"map\"></div>\r\n      <DetailCard \r\n      data={crossings} \r\n      id={selectedId} \r\n      setId={setSelectedId}\r\n      header={true}\r\n      content=\"CROSSINGS ARE OPEN\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CrossingsMap;\r\n"],"names":["React","crossings","setcrossings","selectedId","setSelectedId","url","Constants","fetch","response","json","data","console","log","map","L","setView","attributes","forEach","location","index","state","lat","lon","icon","status","iconUrl","iconSize","iconAnchor","on","addTo","id","setId","header","content"],"sourceRoot":""}